% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FPLMBsplines.R
\name{FPLMBsplines}
\alias{FPLMBsplines}
\title{Best FPLM fit given by a model selection criterion.}
\usage{
FPLMBsplines(
  y,
  x,
  u,
  t,
  w = 1,
  range_nonparam_term = range_default,
  range_func_term = range_default,
  spl_order = 4,
  loss_fun = loss_lmrob,
  model_selection = rbic
)
}
\arguments{
\item{y}{Numeric vector of scalar responses.}

\item{x}{Matrix of the functional covariates, where each row contains the
functions evaluated on a (common) grid.}

\item{u}{Numeric vector with the values of the explanatory variable that
enters the model non-parametrically.}

\item{t}{Numeric vector with the grid over which the functional covariates
were evaluated.}

\item{w}{Numeric vector with varying coefficients for the non-parametric term
(w = 1 for non varying coefficients).}

\item{range_nonparam_term}{a vector of B-spline basis sizes to explore for
the functional regression coefficient.}

\item{range_func_term}{a vector of B-spline basis sizes to explore for the
non-parametric component.}

\item{loss_fun}{string specifying the loss function. 'ls' for least squares,
'huang' for Huber, 'lmbrob' for MM-estimator.}

\item{norder}{Integer for the order of the B-Splines.}

\item{criterion}{Function for the criterion for model selection.}

\item{verbose}{Logical argument indicating whether partial results are
printed.}
}
\value{
A list including the following components:
\describe{
\item{fit}{fitted parameters}
\item{best_k_npt}{chosen number of splines for the non-parametric term}
\item{best_k_ft}{chosen number of splines for the functional regression term}
}
}
\description{
Pick the best FPLM model across different basis sizes according to a
specified model selection criterion.
}
\examples{

# Synthetic data
n <- 100
m <- 50
u <- runif(n)
t <- runif(m)
w <- 1
b <- function(x) x^3
g <- function(x) sin(x)
x <- matrix(rnorm(n * m), nrow = n)
# FIXME: add w
y <- x \%*\% b(t) * min(diff(t)) + w * g(u) + rnorm(n, sd = 0.1)

# Best FPLM fit
FPLM_fit <- FPLMBsplines(y, x, u, t, w,
  range_nonparam_term = 4:13, range_func_term = 4:13,
  norder = 4, loss_fun = "ls", criterion = rbic, verbose = FALSE
)

# Plot the estimates
par(mfrow = c(2, 1))
plot(t, FPLM_fit$fit$slope_fun, pch = 16)
plot(u, FPLM_fit$fit$eta_est, pch = 16)
}
